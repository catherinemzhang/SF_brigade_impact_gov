row
class(row['FY.2014...Total.Actual.Data'])
class(row['FY.2014...Total.Actual.Data'][1,])
if(class(row['FY.2014...Total.Actual.Data'][1,])=='numeric'){print('test')}
if(class(row['FY.2014...Total.Actual.Data'][1,])=='numeric' & class(row['FY.2014...Total.Target.Data'][1,])){print('test')}
if(class(row['FY.2014...Total.Actual.Data'][1,])=='numeric' & class(row['FY.2014...Total.Target.Data'][1,])=='numeric'){print('test')}
goal.over <- function(row){
if(class(row['FY.2014...Total.Actual.Data'][1,])=='numeric' & class(row['FY.2014...Total.Target.Data'][1,])=='numeric'){
if(row['FY.2014...Total.Actual.Data'] > row['FY.2014...Total.Target.Data']){
TRUE
}else{
FALSE
}
}else{
NA
}
}
goal.over(row)
apply(perf.measures.FY14, 1, goal.evaluater)
goal.evaluater <- function(row){
if(class(row['FY.2014...Total.Actual.Data'][1,])=='numeric' & class(row['FY.2014...Total.Target.Data'][1,])=='numeric'){
if(row['Performance.Pattern'] == 'Below target is positive'){
if(row['FY.2014...Total.Actual.Data'] < row['FY.2014...Total.Target.Data']){
TRUE
}else{
FALSE
}
}else if(row['Performance.Pattern'] == 'Above target is positive'){
goal.over(row)
#         if(row['FY.2014...Total.Actual.Data'] > row['FY.2014...Total.Target.Data']){
#             TRUE
#         }else{
#             FALSE
#         }
}else{
NA
#if(row['change'] < .1){
#    TRUE
#}else{
#    FALSE
#}
}
}else{
NA
}
}
apply(perf.measures.FY14, 1, goal.evaluater)
goal.evaluater <- function(row){
if(row['Performance.Pattern'] == 'Below target is positive'){
if(row['FY.2014...Total.Actual.Data'] < row['FY.2014...Total.Target.Data']){
TRUE
}else{
FALSE
}
}else if(row['Performance.Pattern'] == 'Above target is positive'){
#goal.over(row)
if(row['FY.2014...Total.Actual.Data'] > row['FY.2014...Total.Target.Data']){
TRUE
}else{
FALSE
}
}else{
NA
#if(row['change'] < .1){
#    TRUE
#}else{
#    FALSE
#}
}
}
apply(perf.measures.FY14, 1, goal.evaluater)
apply(measured, 1, goal.evaluater)
measured$met.goal <- apply(measured, 1, goal.evaluater)
head(measured)
table(measured$met.goal)
row['FY.2014...Total.Actual.Data'] < row['FY.2014...Total.Target.Data']
row['FY.2014...Total.Target.Data']
row['FY.2014...Total.Actual.Data']
goal.evaluater <- function(row){
if(row['Performance.Pattern'] == 'Below target is positive'){
#if(
row['FY.2014...Total.Actual.Data'] < row['FY.2014...Total.Target.Data']
#){
#             TRUE
#         }else{
#             FALSE
#         }
}else if(row['Performance.Pattern'] == 'Above target is positive'){
#goal.over(row)
#if(
row['FY.2014...Total.Actual.Data'] > row['FY.2014...Total.Target.Data']
#            ){
#             TRUE
#         }else{
#             FALSE
#         }
}else{
NA
#if(row['change'] < .1){
#    TRUE
#}else{
#    FALSE
#}
}
}
apply(measured, 1, goal.evaluater)
measured$met.goal <- apply(measured, 1, goal.evaluater)
head(measured)
as.numeric(row['FY.2014...Total.Actual.Data'])
goal.evaluater <- function(row){
if(row['Performance.Pattern'] == 'Below target is positive'){
#if(
as.numeric(row['FY.2014...Total.Actual.Data']) < as.numeric(row['FY.2014...Total.Target.Data'])
#){
#             TRUE
#         }else{
#             FALSE
#         }
}else if(row['Performance.Pattern'] == 'Above target is positive'){
#goal.over(row)
#if(
as.numeric(row['FY.2014...Total.Actual.Data']) > as.numeric(row['FY.2014...Total.Target.Data'])
#            ){
#             TRUE
#         }else{
#             FALSE
#         }
}else{
NA
#if(row['change'] < .1){
#    TRUE
#}else{
#    FALSE
#}
}
}
apply(measured, 1, goal.evaluater)
measured$met.goal <- apply(measured, 1, goal.evaluater)
head(measured)
apply(perf.measures.FY14, 1, goal.evaluater)
table(measured$met.goal)
table(apply(perf.measures.FY14, 1, goal.evaluater))
as.numeric('asd')
as.numeric('asd')>as.numeric('asdfsd')
as.numeric('asd')>as.numeric(7)
50/NA
(100-90)/100 > .10
(100-90)/100 > .9
(100-90)/100 > .11
(100-90)/100
(100-90)/100 >.9
(100-90)/100 > 0
(100-90)/100 > .01
(100-90)/100 > .1
(100-90)/100 > .09
(100-90)/100 < .1
goal.evaluater <- function(row){
actual = as.numeric(row['FY.2014...Total.Actual.Data'])
target = as.numeric(row['FY.2014...Total.Target.Data'])
if(row['Performance.Pattern'] == 'Below target is positive'){
actual < target
}else if(row['Performance.Pattern'] == 'Above target is positive'){
actual > target
}else{
(target-actual)/target < .1
}
}
table(apply(perf.measures.FY14, 1, goal.evaluater))
509+481
nrow(perf.measures.FY14)
apply(perf.measures.FY14, 1, goal.evaluater)
NA <.1
?commandArgs
dir.exists(/data)
dir.exists(data)
dir.exists('data')
list.dirs()
list.dirs()
?list.dirs()
list.dirs(recursive = FALSE)
list.dirs(path='',recursive = FALSE)
list.dirs(recursive = FALSE)
dir.exists('data')
dir.create('test')
list.dirs(recursive = FALSE)
?file.exists
dir.exists('data/Data_Dictionaries')
dir.exists('data/Data_Dictionarieds')
source('~/.active-rstudio-document')
subset(perf.measures.FY14, select = c(FY.2014...Total.Actual.Data,FY.2014...Total.Target.Data, met.goal))
subset(perf.measures.FY14, select = c(Performance.Pattern ,FY.2014...Total.Actual.Data,FY.2014...Total.Target.Data, met.goal))
perf.measures.FY14$met.goal <- apply(perf.measures.FY14, 1, goal.evaluater)
subset(perf.measures.FY14, select = c(Performance.Pattern ,FY.2014...Total.Actual.Data,FY.2014...Total.Target.Data, met.goal))
head(subset(perf.measures.FY14, select = c(Performance.Pattern ,FY.2014...Total.Actual.Data,FY.2014...Total.Target.Data, met.goal)))
head(subset(perf.measures.FY14, select = c(Performance.Pattern ,FY.2014...Total.Actual.Data,FY.2014...Total.Target.Data, met.goal)), 50)
Veiw(head(subset(perf.measures.FY14, select = c(Performance.Pattern ,FY.2014...Total.Actual.Data,FY.2014...Total.Target.Data, met.goal)), 50))
View(head(subset(perf.measures.FY14, select = c(Performance.Pattern ,FY.2014...Total.Actual.Data,FY.2014...Total.Target.Data, met.goal)), 50))
table(perf.measures.FY14[c('met.goal', 'Performance.Pattern')])
goal.evaluater <- function(row){
actual = as.numeric(row['FY.2014...Total.Actual.Data'])
target = as.numeric(row['FY.2014...Total.Target.Data'])
if(row['Performance.Pattern'] == 'Below target is positive'){
actual < target
}else if(row['Performance.Pattern'] == 'Above target is positive'){
actual > target
}else{
# Checked within 5% is good for now, needs more research
(target-actual)/target < .5 & (target-actual)/target > -.5
}
}
perf.measures.FY14$met.goal <- apply(perf.measures.FY14, 1, goal.evaluater)
table(perf.measures.FY14[c('met.goal', 'Performance.Pattern')])
goal.evaluater <- function(row){
actual = as.numeric(row['FY.2014...Total.Actual.Data'])
target = as.numeric(row['FY.2014...Total.Target.Data'])
if(row['Performance.Pattern'] == 'Below target is positive'){
actual < target
}else if(row['Performance.Pattern'] == 'Above target is positive'){
actual > target
}else{
# Checked within 5% is good for now, needs more research
(target-actual)/target < .05 & (target-actual)/target > -.05
}
}
perf.measures.FY14$met.goal <- apply(perf.measures.FY14, 1, goal.evaluater)
table(perf.measures.FY14[c('met.goal', 'Performance.Pattern')])
?table
prop.table(perf.measures.FY14[c('met.goal', 'Performance.Pattern')])
prop.table(table(perf.measures.FY14[c('met.goal', 'Performance.Pattern')]))
table(perf.measures.FY14[c('met.goal', 'Performance.Pattern')])
prop.table(table(perf.measures.FY14[c('met.goal', 'Performance.Pattern')]))
?prop.table
test <-table(perf.measures.FY14[c('met.goal', 'Performance.Pattern')])
apply(test, 2, function(col){(col[,1]+col[2,])/col[,2]})
apply(test, 2, function(col){(col[,1]+col[,2])/col[,2]})
apply(test, 2, function(col){(col[1,]+col[2,])/col[2,]})
test <-table(perf.measures.FY14[c('met.goal', 'Performance.Pattern')])
apply(test, 2, function(col){(col[1,]+col[2,])/col[2,]})
apply(test, 2, function(col){(col[1]+col[2])/col[2]})
apply(test, 2, function(col){(col[1]+col[3])/col[2]})
apply(test, 2, function(col){(col[1]+col[2])/col[2]})
apply(test, 2, function(col){(col[1]+col[2])})
apply(test, 2, function(col){col[2]/(col[1]+col[2])})
library(ggplot2)
names(perf.measures.FY14)
ggplot(perf.measures.FY14, aes(dept)) +
geom_bar()
ggplot(perf.measures.FY14, aes(Dept)) +
geom_bar()
ggplot(perf.measures.FY14, aes(x = Dept, fill = met.goal)) +
geom_bar()
ggplot(perf.measures.FY14, aes(x = reorder(Dept), fill = met.goal)) +
geom_bar()
ggplot(perf.measures.FY14, aes(x = reorder(Dept), fill = met.goal)) +
geom_bar()
?reorder
ggplot(perf.measures.FY14, aes(x = reorder(Dept, amount, count), fill = met.goal)) +
geom_bar()
ggplot(perf.measures.FY14, aes(x = reorder(Dept, Dept, count), fill = met.goal)) +
geom_bar()
ggplot(perf.measures.FY14, aes(x = reorder(Dept, Dept, n()), fill = met.goal)) +
geom_bar()
ggplot(perf.measures.FY14, aes(x = reorder(Dept, Dept, n, fill = met.goal)) +
geom_bar()
?reorder
geom_bar()
?reorder
ggplot(perf.measures.FY14, aes(x = reorder(Dept, Dept, n), fill = met.goal)) +
geom_bar()
ggplot(perf.measures.FY14, aes(x = reorder(Dept, Dept, n()), fill = met.goal)) +
geom_bar()
ggplot(perf.measures.FY14, aes(x = reorder(Dept, count(Dept), count), fill = met.goal)) +
geom_bar()
ggplot(perf.measures.FY14, aes(x = reorder(Dept, -value), fill = met.goal)) +
geom_bar()
ggplot(perf.measures.FY14, aes(x = reorder(Dept, -Dept), fill = met.goal)) +
geom_bar()
ggplot(perf.measures.FY14, aes(x = reorder(Dept, -count(Dept)), fill = met.goal)) +
geom_bar()
ggplot(perf.measures.FY14, aes(x = reorder(Dept, -table(Dept)), fill = met.goal)) +
geom_bar()
table(perf.measures.FY14$Dept)
sort(table(perf.measures.FY14$Dept))
sort(table(perf.measures.FY14$Dept),decreasing = TRUE)
names(sort(table(perf.measures.FY14$Dept),decreasing = TRUE))
ggplot(perf.measures.FY14, aes(x = Dept, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order)
bar.order <- names(sort(table(perf.measures.FY14$Dept),decreasing = TRUE))
ggplot(perf.measures.FY14, aes(x = Dept, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order)
names(perf.measures.FY14)
ggplot(perf.measures.FY14, aes(x = Dept, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Programs by Department")
length(unique(perf.measures.FY14$Program))
length(unique(perf.measures.FY14$Performance.Measure))
length(unique(perf.measures.FY14$Goal))
length(unique(perf.measures.FY14$KPI_CODE))
unique(perf.measures.FY14$Program)
length(unique(perf.measures.FY14$Dept))
plot_ly(perf.measures.FY14, x=Dept, type = 'bar')
library(plotly)
plot_ly(perf.measures.FY14, x=Dept, type = 'bar')
plot_ly(perf.measures.FY14, x=Dept, type = 'bar', color = met.goal)
plot_ly(perf.measures.FY14, x=Dept, y=n(Dept) type = 'bar', color = met.goal)
plot_ly(perf.measures.FY14, x=Dept, y=n(Dept), type = 'bar', color = met.goal)
plot_ly(perf.measures.FY14, x=Dept, y=n, type = 'bar', color = met.goal)
perf.measures.FY14 %>% count(Dept)%>%
plot_ly( x=Dept, y=n, type = 'bar', color = met.goal)
perf.measures.FY14 %>% count(Dept)%>%
plot_ly( x=Dept, y=n, type = 'bar')
perf.measures.FY14 %>% count(Dept)%>%
plot_ly( x=Dept, y=n, type = 'bar', color = .['met.goal'])
plot_ly( x=Dept, y=n, type = 'bar', color = perf.measures.FY14$met.goal)
perf.measures.FY14 %>% count(Dept)%>%
plot_ly( x=Dept, y=n, type = 'bar', color = perf.measures.FY14$met.goal)
p<-ggplot(perf.measures.FY14, aes(x = Dept, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY14")
ggplotly(p)
p<-ggplot(perf.measures.FY14, aes(x = Dept, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY14")
p
ggplotly(p)
perf.measures.FY14 %>% count(Dept)%>%
plot_ly( x=Dept, y=n, type = 'bar')
perf.measures.FY14 %>% count(Dept)
ggplot(perf.measures.FY14, aes(x = Dept, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY14") +
theme(legend.position="top")
ggplot(perf.measures.FY14, aes(x = Dept, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY14") +
theme(legend.position="top")+
theme(axis.text.x = element_text(angle = 45, hjust = 0))
ggplot(perf.measures.FY14, aes(x = Dept, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY14") +
theme(legend.position="top")+
theme(axis.text.x = element_text(angle = -45, hjust = 0))
ggplot(perf.measures.FY14, aes(x = Department, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY14") +
theme(legend.position="top")+
theme(axis.text.x = element_text(angle = -45, hjust = 0))
ggplot(perf.measures.FY14, aes(x = Department, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY14") +
theme(legend.position="top")+
theme(axis.text.x = element_text(angle = -45, hjust = 0))
unique(perf.measures.FY14$Department)
unique(perf.measures.FY14$Dept)
nrows(perf.measures.FY14$Dept)
nrow(perf.measures.FY14$Dept)
length(perf.measures.FY14$Dept)
table(perf.measures.FY14$Dept)
ggplot(perf.measures.FY14, aes(x = Department, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY14") +
theme(legend.position="top")+
theme(axis.text.x = element_text(angle = -45, hjust = 0))
ggplot(perf.measures.FY14, aes(x = Department)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY14") +
theme(legend.position="top")+
theme(axis.text.x = element_text(angle = -45, hjust = 0))
t
t
t
t
ggplot(perf.measures.FY14, aes(x = Dept, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY14") +
theme(legend.position="top")+
theme(axis.text.x = element_text(angle = -45, hjust = 0))
bar.order <- names(sort(table(perf.measures.FY14$Department),decreasing = TRUE))
ggplot(perf.measures.FY14, aes(x = Department, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY14") +
theme(legend.position="top")+
theme(axis.text.x = element_text(angle = -45, hjust = 0))
bar.order <- names(sort(table(perf.measures.FY14$Dept),decreasing = TRUE))
ggplot(perf.measures.FY14, aes(x = Dept, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY14") +
theme(legend.position="top")+
theme(axis.text.x = element_text(angle = -45, hjust = 0))
subset(perf.measures.FY14, select = c(Dept,Department))
unique(subset(perf.measures.FY14, select = c(Dept,Department)))
perf.measures.FY13 <- read.csv('../data/Citywide_Performance_Measurement_Annual_Report_FY13_Dataset.csv')
names(perf.measures.FY13)
names(perf.measures.FY14)
?apply
ggplot(perf.measures.FY13, aes(x = Dept, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY13") +
theme(legend.position="top")+
theme(axis.text.x = element_text(angle = -45, hjust = 0))
perf.measures.FY13$met.goal <- apply(perf.measures.FY13, 1, goal.evaluater, 'FY.2013...Total.Actual.Data', 'FY.2013...Total.Target.Data')
perf.measures.FY14$met.goal <- apply(perf.measures.FY14, 1, goal.evaluater, 'FY.2014...Total.Actual.Data', 'FY.2014...Total.Target.Data')
goal.evaluater <- function(row, actual.col, target.col){
actual = as.numeric(row[actual.col])
target = as.numeric(row[target.col])
if(row['Performance.Pattern'] == 'Below target is positive'){
actual < target
}else if(row['Performance.Pattern'] == 'Above target is positive'){
actual > target
}else{
# Checked within 5% is good for now, needs more research
(target-actual)/target < .05 & (target-actual)/target > -.05
}
}
perf.measures.FY13$met.goal <- apply(perf.measures.FY13, 1, goal.evaluater, 'FY.2013...Total.Actual.Data', 'FY.2013...Total.Target.Data')
test <-table(perf.measures.FY14[c('met.goal', 'Performance.Pattern')])
ggplot(perf.measures.FY13, aes(x = Dept, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY13") +
theme(legend.position="top")+
theme(axis.text.x = element_text(angle = -45, hjust = 0))
ggplot(perf.measures.FY13, aes(x = Dept, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY13") +
theme(legend.position="top")+
theme(axis.text.x = element_text(angle = -45, hjust = 0))
ggplot(perf.measures.FY13, aes(x = Dept, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY13") +
theme(legend.position="top")+
theme(axis.text.x = element_text(angle = -45, hjust = 0))
ggplot(perf.measures.FY13, aes(x = Dept, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY13") +
theme(legend.position="top")+
theme(axis.text.x = element_text(angle = -45, hjust = 0))
perf.measures.FY13$met.goal
table(perf.measures.FY13$met.goal)
unique(perf.measures.FY13$met.goal)
unique(perf.measures.FY14$met.goal)
class(perf.measures.FY14$met.goal)
class(perf.measures.FY13$met.goal)
names(perf.measures.FY13)
ggplot(perf.measures.FY14, aes(x = met.goal)) +
geom_bar()
ggplot(perf.measures.FY13, aes(x = met.goal)) +
geom_bar()
unique(perf.measures.FY15$met.goal)
unique(perf.measures.FY13$met.goal)
is.finite(perf.measures.FY13$met.goal)
as.finite(perf.measures.FY13$met.goal)
is.finite(perf.measures.FY13$met.goal)
ggplot(perf.measures.FY13, aes(x = Dept, fill = met.goal)) +
geom_bar() +
scale_x_discrete(limits = bar.order) +
labs(title= "Performance Measure by Department FY13") +
theme(legend.position="top")+
theme(axis.text.x = element_text(angle = -45, hjust = 0))
finite()
??finite
str(perf.measures.FY13$met.goal)
str(perf.measures.FY14$met.goal)
nrow(perf.measures.FY13)
nrow(perf.measures.FY14)
is.finite(perf.measures.FY13$met.goal)
perf.measures.FY13$met.goal
perf.measures.FY13[is.finite(perf.measures.FY13$met.goal),]
perf.measures.FY13$met.goal <- apply(perf.measures.FY13, 1, goal.evaluater, 'FY.2013...Total.Actual.Data', 'FY.2013...Total.Target.Data')
perf.measures.FY13$met.goal
goal.evaluater <- function(row, actual.col, target.col){
actual = as.numeric(row[actual.col])
target = as.numeric(row[target.col])
if(row['Performance.Pattern'] == 'Below target is positive'){
actual < target
}else if(row['Performance.Pattern'] == 'Above target is positive'){
actual > target
}else{
# Checked within 5% is good for now, needs more research
(target-actual)/target < .05 & (target-actual)/target > -.05
}
}
perf.measures.FY13$met.goal <- apply(perf.measures.FY13, 1, goal.evaluater, 'FY.2013...Total.Actual.Data', 'FY.2013...Total.Target.Data')
perf.measures.FY13$met.goal
perf.measures.FY13 <- read.csv('../data/Citywide_Performance_Measurement_Annual_Report_FY13_Dataset.csv')
perf.measures.FY13$met.goal <- apply(perf.measures.FY13, 1, goal.evaluater, 'FY.2013...Total.Actual.Data', 'FY.2013...Total.Target.Data')
perf.measures.FY13$met.goal
names(perf.measures.FY13)
perf.measures.FY13 <- read.csv('../data/Citywide_Performance_Measurement_Annual_Report_FY13_Dataset.csv')
names(perf.measures.FY13)
?read.csv()
getwd()
setwd('scott/')
